[
  {
    "content": "Before the advent of deep learning it was common practice in machine learning to use some form of fixed pre-processing of the input variables x, also known as fea- ture extraction, expressed in terms of a set of basis functions {{j(x)}. The goal was to choose a sufficiently powerful set of basis functions that the resulting learning task could be solved using a simple network model. Unfortunately, it is very difficult to hand-craft suitable basis functions for anything but the simplest applications. Deep learning avoids this problem by learning the required nonlinear transformations of the data from the data set itself.",
    "metadata": {
      "page_number": 113,
      "section_heading": "4.1. Linear Regression",
      "subsection_heading": "",
      "page_header": "4. SINGLE-LAYER NETWORKS: REGRESSION",
      "figure_references": [],
      "formula_references": []
    },
    "locations": [
      {
        "page": 1,
        "polygon": [
          1.6726,
          2.583,
          6.5734,
          2.5835,
          6.5732,
          3.9051,
          1.6725,
          3.9046
        ]
      }
    ]
  },
  {
    "content": "We have already encountered an example of a regression problem when we dis- cussed curve fitting using polynomials. The polynomial function (1.1) can be ex- pressed in the form (4.3) if we consider a single input variable x and if we choose basis functions defined by øj(x) = x3. There are many other possible choices for the basis functions, for example",
    "metadata": {
      "page_number": 113,
      "section_heading": "4.1. Linear Regression",
      "subsection_heading": "",
      "page_header": "4. SINGLE-LAYER NETWORKS: REGRESSION",
      "figure_references": [],
      "formula_references": [
        "(1.1)"
      ]
    },
    "locations": [
      {
        "page": 1,
        "polygon": [
          1.6742,
          3.9163,
          6.5663,
          3.915,
          6.5666,
          4.7458,
          1.6744,
          4.7471
        ]
      }
    ]
  },
  {
    "content": "where the pj govern the locations of the basis functions in input space, and the parameter s governs their spatial scale. These are usually referred to as 'Gaussian' basis functions, although it should be noted that they are not required to have a probabilistic interpretation. In particular the normalization coefficient is unimportant because these basis functions will be multiplied by learnable parameters wj.",
    "metadata": {
      "page_number": 113,
      "section_heading": "4.1. Linear Regression",
      "subsection_heading": "",
      "page_header": "4. SINGLE-LAYER NETWORKS: REGRESSION",
      "figure_references": [],
      "formula_references": []
    },
    "locations": [
      {
        "page": 1,
        "polygon": [
          1.6731,
          5.3473,
          6.5652,
          5.343,
          6.5659,
          6.1876,
          1.6739,
          6.1919
        ]
      }
    ]
  },
  {
    "content": "Another possibility is the sigmoidal basis function of the form",
    "metadata": {
      "page_number": 113,
      "section_heading": "4.1. Linear Regression",
      "subsection_heading": "",
      "page_header": "4. SINGLE-LAYER NETWORKS: REGRESSION",
      "figure_references": [],
      "formula_references": []
    },
    "locations": [
      {
        "page": 1,
        "polygon": [
          1.9275,
          6.1759,
          5.5555,
          6.177,
          5.5554,
          6.3432,
          1.9275,
          6.342
        ]
      }
    ]
  },
  {
    "content": "where o (a) is the logistic sigmoid function defined by",
    "metadata": {
      "page_number": 113,
      "section_heading": "4.1. Linear Regression",
      "subsection_heading": "",
      "page_header": "4. SINGLE-LAYER NETWORKS: REGRESSION",
      "figure_references": [],
      "formula_references": []
    },
    "locations": [
      {
        "page": 1,
        "polygon": [
          1.6763,
          6.9459,
          4.8374,
          6.9469,
          4.8374,
          7.1164,
          1.6763,
          7.1154
        ]
      }
    ]
  },
  {
    "content": "σ(α) = 1 + exp(-a) 1 (4.6) .",
    "metadata": {
      "page_number": 113,
      "section_heading": "4.1. Linear Regression",
      "subsection_heading": "",
      "page_header": "4. SINGLE-LAYER NETWORKS: REGRESSION",
      "figure_references": [],
      "formula_references": [
        "(4.6)"
      ]
    },
    "locations": [
      {
        "page": 1,
        "polygon": [
          3.4508,
          7.2278,
          6.5598,
          7.2402,
          6.5584,
          7.5942,
          3.4494,
          7.5818
        ]
      }
    ]
  },
  {
    "content": "Equivalently, we can use the tanh function because this is related to the logistic sigmoid by tanh(a) = 20(2a) - 1, and so a general linear combination of logistic sigmoid functions is equivalent to a general linear combination of tanh functions in the sense that they can represent the same class of input-output functions. These various choices of basis function are illustrated in Figure 4.2.",
    "metadata": {
      "page_number": 113,
      "section_heading": "4.1. Linear Regression",
      "subsection_heading": "",
      "page_header": "4. SINGLE-LAYER NETWORKS: REGRESSION",
      "figure_references": [
        "Figure 4.2"
      ],
      "formula_references": []
    },
    "locations": [
      {
        "page": 1,
        "polygon": [
          1.6713,
          7.6972,
          6.5629,
          7.695,
          6.5633,
          8.5223,
          1.6717,
          8.5245
        ]
      }
    ]
  },
  {
    "content": "Yet another possible choice of basis function is the Fourier basis, which leads to an expansion in sinusoidal functions. Each basis function represents a specific fre- quency and has infinite spatial extent. By contrast, basis functions that are localized to finite regions of input space necessarily comprise a spectrum of different spatial frequencies. In signal processing applications, it is often of interest to consider basis functions that are localized in both space and frequency, leading to a class of func- tions known as wavelets (Ogden, 1997; Mallat, 1999; Vidakovic, 1999). These are also defined to be mutually orthogonal, to simplify their application. Wavelets are most applicable when the input values live on a regular lattice, such as the successive time points in a temporal sequence or the pixels in an image.",
    "metadata": {
      "page_number": 114,
      "section_heading": "4.1. Linear Regression",
      "subsection_heading": "",
      "page_header": "4. SINGLE-LAYER NETWORKS: REGRESSION",
      "figure_references": [],
      "formula_references": []
    },
    "locations": [
      {
        "page": 2,
        "polygon": [
          1.678,
          3.5842,
          6.5687,
          3.5832,
          6.569,
          5.2524,
          1.6783,
          5.2534
        ]
      }
    ]
  },
  {
    "content": "Most of the discussion in this chapter, however, is independent of the choice of basis function set, and so we will not specify the particular form of the basis func- tions, except for numerical illustration. Furthermore, to keep the notation simple, we will focus on the case of a single target variable t, although we will briefly outline the modifications needed to deal with multiple target variables.",
    "metadata": {
      "page_number": 114,
      "section_heading": "4.1. Linear Regression",
      "subsection_heading": "",
      "page_header": "4. SINGLE-LAYER NETWORKS: REGRESSION",
      "figure_references": [],
      "formula_references": []
    },
    "locations": [
      {
        "page": 2,
        "polygon": [
          1.6779,
          5.2441,
          6.5777,
          5.2415,
          6.5781,
          6.0762,
          1.6784,
          6.0788
        ]
      }
    ]
  },
  {
    "content": "We solved the problem of fitting a polynomial function to data by minimizing a sum-of-squares error function, and we also showed that this error function could be motivated as the maximum likelihood solution under an assumed Gaussian noise model. We now return to this discussion and consider the least-squares approach, and its relation to maximum likelihood, in more detail.",
    "metadata": {
      "page_number": 114,
      "section_heading": "4.1. Linear Regression",
      "subsection_heading": "4.1.2 Likelihood function",
      "page_header": "4. SINGLE-LAYER NETWORKS: REGRESSION",
      "figure_references": [],
      "formula_references": []
    },
    "locations": [
      {
        "page": 2,
        "polygon": [
          1.677,
          6.433,
          6.5689,
          6.4332,
          6.5689,
          7.2589,
          1.677,
          7.2587
        ]
      }
    ]
  },
  {
    "content": "As before, we assume that the target variable t is given by a deterministic func- tion y(x, w) with additive Gaussian noise so that",
    "metadata": {
      "page_number": 114,
      "section_heading": "4.1. Linear Regression",
      "subsection_heading": "4.1.2 Likelihood function",
      "page_header": "4. SINGLE-LAYER NETWORKS: REGRESSION",
      "figure_references": [],
      "formula_references": []
    },
    "locations": [
      {
        "page": 2,
        "polygon": [
          1.6784,
          7.2694,
          6.5628,
          7.258,
          6.5636,
          7.5896,
          1.6792,
          7.6009
        ]
      }
    ]
  },
  {
    "content": "where e is a zero-mean Gaussian random variable with variance o2. Thus, we can write",
    "metadata": {
      "page_number": 114,
      "section_heading": "4.1. Linear Regression",
      "subsection_heading": "4.1.2 Likelihood function",
      "page_header": "4. SINGLE-LAYER NETWORKS: REGRESSION",
      "figure_references": [],
      "formula_references": []
    },
    "locations": [
      {
        "page": 2,
        "polygon": [
          1.6775,
          8.0225,
          6.5683,
          8.0266,
          6.5681,
          8.3412,
          1.6773,
          8.337
        ]
      }
    ]
  }
]